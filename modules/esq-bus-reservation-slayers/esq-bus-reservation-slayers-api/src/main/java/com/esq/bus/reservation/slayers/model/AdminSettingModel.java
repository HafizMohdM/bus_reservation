/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.esq.bus.reservation.slayers.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the AdminSetting service. Represents a row in the &quot;BOOKRESERVATION_AdminSetting&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.esq.bus.reservation.slayers.model.impl.AdminSettingModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.esq.bus.reservation.slayers.model.impl.AdminSettingImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AdminSetting
 * @generated
 */
@ProviderType
public interface AdminSettingModel extends BaseModel<AdminSetting> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a admin setting model instance should use the {@link AdminSetting} interface instead.
	 */

	/**
	 * Returns the primary key of this admin setting.
	 *
	 * @return the primary key of this admin setting
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this admin setting.
	 *
	 * @param primaryKey the primary key of this admin setting
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the setting ID of this admin setting.
	 *
	 * @return the setting ID of this admin setting
	 */
	public long getSettingId();

	/**
	 * Sets the setting ID of this admin setting.
	 *
	 * @param settingId the setting ID of this admin setting
	 */
	public void setSettingId(long settingId);

	/**
	 * Returns the key of this admin setting.
	 *
	 * @return the key of this admin setting
	 */
	@AutoEscape
	public String getKey();

	/**
	 * Sets the key of this admin setting.
	 *
	 * @param key the key of this admin setting
	 */
	public void setKey(String key);

	/**
	 * Returns the value of this admin setting.
	 *
	 * @return the value of this admin setting
	 */
	@AutoEscape
	public String getValue();

	/**
	 * Sets the value of this admin setting.
	 *
	 * @param value the value of this admin setting
	 */
	public void setValue(String value);

	@Override
	public AdminSetting cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}