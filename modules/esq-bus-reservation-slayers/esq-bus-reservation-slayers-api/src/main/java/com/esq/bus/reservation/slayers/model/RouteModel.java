/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.esq.bus.reservation.slayers.model;

import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Route service. Represents a row in the &quot;BOOKRESERVATION_Route&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.esq.bus.reservation.slayers.model.impl.RouteModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.esq.bus.reservation.slayers.model.impl.RouteImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Route
 * @generated
 */
@ProviderType
public interface RouteModel extends BaseModel<Route> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a route model instance should use the {@link Route} interface instead.
	 */

	/**
	 * Returns the primary key of this route.
	 *
	 * @return the primary key of this route
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this route.
	 *
	 * @param primaryKey the primary key of this route
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the route ID of this route.
	 *
	 * @return the route ID of this route
	 */
	public long getRouteId();

	/**
	 * Sets the route ID of this route.
	 *
	 * @param routeId the route ID of this route
	 */
	public void setRouteId(long routeId);

	/**
	 * Returns the start location ID of this route.
	 *
	 * @return the start location ID of this route
	 */
	public long getStartLocationId();

	/**
	 * Sets the start location ID of this route.
	 *
	 * @param startLocationId the start location ID of this route
	 */
	public void setStartLocationId(long startLocationId);

	/**
	 * Returns the end location ID of this route.
	 *
	 * @return the end location ID of this route
	 */
	public long getEndLocationId();

	/**
	 * Sets the end location ID of this route.
	 *
	 * @param endLocationId the end location ID of this route
	 */
	public void setEndLocationId(long endLocationId);

	/**
	 * Returns the distance km of this route.
	 *
	 * @return the distance km of this route
	 */
	public double getDistanceKm();

	/**
	 * Sets the distance km of this route.
	 *
	 * @param distanceKm the distance km of this route
	 */
	public void setDistanceKm(double distanceKm);

	@Override
	public Route cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}